"use client"

import { useEffect, useState } from "react"
import { Modal, Button, message, Spin } from "antd"
import axios from "axios"

const BASE_API_URL = import.meta.env.VITE_BASE_API_URL

interface User {
  maintance_fee_type: string
  maintance_fee: string
  maintance_fee_option: string
}

interface MaintenanceFeeNoticeProps {
  isMaintenanceNotice: boolean
  onClose: () => void
  setIsMaintenanceNotice: (value: boolean) => void
  user: User
}

const MaintenanceFeeNotice = ({
  isMaintenanceNotice,
  onClose,
  setIsMaintenanceNotice,
  user,
}: MaintenanceFeeNoticeProps) => {
  const [loading, setLoading] = useState(false)
  const [executing, setExecuting] = useState(false)
  const [countdown, setCountdown] = useState(10)
  const [retry, setRetry] = useState(false)


const currentMonthName = new Date().toLocaleString("bn-BD", { month: "long" });

// ржЙржкрж░рзЗрж░ ржЕржВрж╢рзЗ рж╣рж┐рж╕рж╛ржм ржХрж░рзЗ ржирж┐ржи
const fee = parseFloat(user.maintance_fee ?? "0");
const transactionCharge = Math.ceil((fee * 1.5) ) / 100;
const totalAmount = Math.ceil((fee + transactionCharge) * 100) / 100;




  const query = new URLSearchParams(window.location.search)
  const paymentID = query.get("paymentID")

  useEffect(() => {
    if (paymentID) {
      executePayment(paymentID)
    }
  }, [paymentID])

  useEffect(() => {
    if (executing && countdown > 0) {
      const timer = setTimeout(() => setCountdown(c => c - 1), 1000)
      return () => clearTimeout(timer)
    }
  }, [executing, countdown])

  const executePayment = async (id: string) => {
    setExecuting(true)
    try {
      const token = localStorage.getItem("token")

      const res = await axios.post(
        `${BASE_API_URL}/maintance-fee/execute`,
        { paymentID: id },
        {
          headers: {
            Authorization: `Bearer ${token}`,
            Accept: "application/json",
          },
        }
      )

      const status = res.data?.data?.maintance_fee?.status

      if (status === "paid") {
        message.success("рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг ржлрж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!")
        setIsMaintenanceNotice(false)
      } else {
        setRetry(true)
        message.warning("ржкрзЗржорзЗржирзНржЯ рж╕ржорзНржкржирзНржи рж╣ржпрж╝ржирж┐ред ржжржпрж╝рж╛ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")
      }
    } catch (err) {
      setRetry(true)
      message.error("ржкрзЗржорзЗржирзНржЯ ржпрж╛ржЪрж╛ржЗржпрж╝рзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред")
    } finally {
      setExecuting(false)
      setCountdown(10)
    }
  }

  const handlePayMaintenance = async () => {
    try {
      setLoading(true)
      const s_uri = window.location.href
      const token = localStorage.getItem("token")

      const response = await axios.post(
        `${BASE_API_URL}/user/maintance-fees`,
        { s_uri },
        {
          headers: {
            Authorization: `Bearer ${token}`,
            Accept: "application/json",
          },
        }
      )

      if (response.data?.data?.payment_url) {
        window.location.href = response.data.data.payment_url
        return
      }

      if (response.data?.data?.status === "Pending") {
        message.success("ржкрзЗржорзЗржирзНржЯ ржЧрзЗржЯржУржпрж╝рзЗрждрзЗ ржЪрж▓рзЗржЫрзЗржиред")
        setIsMaintenanceNotice(false)
      } else {
        message.error(response.data?.data?.message || "ржкрзЗржорзЗржирзНржЯрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред")
      }
    } catch (error) {
      message.error("ржкрзЗржорзЗржирзНржЯрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред")
      console.error("Payment error:", error)
    } finally {
      setLoading(false)
    }
  }

  return (
    <Modal
      title={
      <div className="text-danger fw-bold fs-4">
        тЪая╕П ржЬрж░рзБрж░рж┐ ржирзЛржЯрж┐рж╢: рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг ржлрж┐ ржмрж╛ржХрж┐ рж░рзЯрзЗржЫрзЗ
      </div>
      }
      open={isMaintenanceNotice}
      footer={null}
      centered
      closable={true}
      onCancel={onClose}
      width="50%"
    >
      <div className="p-3">
        {executing ? (
          <div className="text-center">
            <Spin size="large" />
            <p className="mt-3 fw-semibold fs-5 text-primary">
              ржкрзЗржорзЗржирзНржЯ ржпрж╛ржЪрж╛ржЗ ржЪрж▓ржЫрзЗ... {countdown} рж╕рзЗржХрзЗржирзНржб ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи
            </p>
          </div>
        ) : retry ? (
          <div className="alert alert-warning">
            ржкрзЗржорзЗржирзНржЯ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ ржмрж╛ ржЕрж╕ржорзНржкрзВрж░рзНржгред ржжржпрж╝рж╛ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред
            <div className="text-end mt-3">
              <Button type="primary" onClick={() => executePayment(paymentID!)}>
                ржЖржмрж╛рж░ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи
              </Button>
            </div>
          </div>
        ) : (
          <>








<div className="alert alert-danger border border-danger rounded mb-4 fs-5">
  <p className="fw-bold">ржкрзНрж░рж┐ржпрж╝ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА,</p>

  <p>
    ржЖржкржирж╛рж░ ржмрзНржпржмрж╣рзГржд рж╕рж┐рж╕рзНржЯрзЗржоржЯрж┐рж░ <strong className="text-primary">
      {user.maintance_fee_type === "monthly" ? "ржорж╛рж╕рж┐ржХ" : "ржмрж╛рж░рзНрж╖рж┐ржХ"}
    </strong> рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг ржлрж┐ ржПржЦржирзЛ ржкрж░рж┐рж╢рзЛржз рж╣рзЯржирж┐ред
  </p>

{user.maintance_fee_type == "monthly" && (
  <div className="alert alert-info border-info mt-2 mb-3">
    <p className="mb-0">
      ЁЯФД <strong>ржЖржкржирж╛ржжрзЗрж░ рж╕рзБржмрж┐ржзрж╛рж░рзНржерзЗ</strong>, ржкрзВрж░рзНржмрзЗрж░ ржмрж╛рж░рзНрж╖рж┐ржХ ржлрж┐-ржПрж░ ржкрж░рж┐ржмрж░рзНрждрзЗ ржПржЦржи ржерзЗржХрзЗ 
      <strong> ржорж╛рж╕рж┐ржХ ржнрж┐рждрзНрждрж┐рждрзЗ </strong> рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг ржлрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛рж░ ржмрзНржпржмрж╕рзНржерж╛ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред 
      <strong className="text-danger"> ржПржЗ ржорж╛рж╕рзЗрж░ ржлрж┐ ржкрж░рж┐рж╢рзЛржз ржХрж░рзБржи ржПржмржВ рж╕рзЗржмрж╛ ржЪрж╛рж▓рзБ рж░рж╛ржЦрзБржиред</strong>
      
    </p>
  </div>
)}

  {/* Table Section Starts Here */}
  <p className="text-danger fw-semibold mb-1">тЮд</p>
<table className="table border border-danger rounded overflow-hidden shadow-sm">
  <thead style={{ backgroundColor: "#f8d7da" }}>
    <tr>
      <th className="py-2 ps-3 text-start">ЁЯз╛ ржмрж┐ржмрж░ржг</th>
      <th className="py-2 pe-3 text-end">ржкрж░рж┐ржорж╛ржг (рз│)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td className="ps-3 text-start">
        рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг ржлрж┐ 
        ({user.maintance_fee_type === "monthly" ? `${currentMonthName} ржорж╛рж╕` : "ржмрж╛рж░рзНрж╖рж┐ржХ"})
      </td>
      <td className="pe-3 text-end">{fee.toFixed(2)}</td>
    </tr>
    <tr>
      <td className="ps-3 text-start">ржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ржлрж┐ (рзз.рзл%)</td>
      <td className="pe-3 text-end">{transactionCharge.toFixed(2)}</td>
    </tr>
    <tr style={{ backgroundColor: "#f8d7da", fontWeight: "bold", fontSize: "1.1rem" }}>
      <td className="ps-3 text-start text-danger">ржорзЛржЯ ржкрж░рж┐рж╢рзЛржзржпрзЛржЧрзНржп</td>
      <td className="pe-3 text-end text-danger">{totalAmount.toFixed(2)}</td>
    </tr>
  </tbody>
</table>
  {/* Table Section Ends Here */}

  <p>
    ржлрж┐ ржкрж░рж┐рж╢рзЛржз ржирж╛ ржХрж░рж▓рзЗ ржЖржкржирж╛рж░ рж╕рж┐рж╕рзНржЯрзЗржо ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╕рж╛ржоржпрж╝рж┐ржХржнрж╛ржмрзЗ рж╕рзАржорж┐ржд ржмрж╛ ржмржирзНржз рж╣ржпрж╝рзЗ ржпрзЗрждрзЗ ржкрж╛рж░рзЗред
  </p>

  <p className="fw-semibold text-success">
    тЮд ржПржЦржиржЗ ржлрж┐ ржкрж░рж┐рж╢рзЛржз ржХрж░рзЗ рж╕рзЗржмрж╛ ржЪрж╛рж▓рзБ рж░рж╛ржЦрзБржиред
  </p>

  <p className="text-secondary mt-3">
    ЁЯФ║ <strong>ржоржирзЗ рж░рж╛ржЦржмрзЗржи:</strong> ржЕржирж▓рж╛ржЗржи ржкрзЗржорзЗржирзНржЯрзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржорзЛржЯ ржЕрж░рзНржерзЗрж░ ржЙржкрж░
    <strong className="text-danger"> рзз.рзл% ржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ржлрж┐</strong> ржкрзНрж░ржпрзЛржЬрзНржп рж╣ржмрзЗред
  </p>

  <div className="mt-4 p-3 bg-warning-subtle border border-warning rounded text-dark">
    <strong className="d-block text-danger fs-5 mb-2">тЭЧ рж╕ржорж╕рзНржпрж╛рзЯ ржкрзЬрзЗржЫрзЗржи?</strong>
    <p className="mb-1">
      ржкрзЗржорзЗржирзНржЯ ржХрж░рждрзЗ ржЕрж╕рзБржмрж┐ржзрж╛ рж╣рж▓рзЗ ржЕржержмрж╛ ржХрж┐ржЫрзБ ржмрзБржЭрждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржжржпрж╝рж╛ ржХрж░рзЗ ржирж┐ржЪрзЗрж░ ржиржорзНржмрж░рзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи:
    </p>
    <a href="tel:01909756552" className="fs-5 fw-bold text-primary mb-0 d-inline-block">
      ЁЯУЮ рзжрззрзпрзжрзпрзнрзлрзмрзлрзлрзи
    </a>
  </div>
</div>














            <div className="d-flex justify-content-end gap-2">
              <Button onClick={onClose} className="btn btn-outline-secondary fs-6">
                ржкрж░рзЗ ржкрж░рж┐рж╢рзЛржз ржХрж░ржм
              </Button>
              <Button
                type="primary"
                loading={loading}
                onClick={handlePayMaintenance}
                className="btn btn-danger fs-6 fw-semibold"
              >
                ржПржЦржиржЗ ржкрж░рж┐рж╢рзЛржз ржХрж░рзБржи
              </Button>
            </div>
          </>
        )}
      </div>
    </Modal>
  )
}

export default MaintenanceFeeNotice
